/*import java.lang.System;
import java.util.Scanner;
import java.util.ArrayList;
import org.jpy.PyLib;
import com.fasterxml.jackson.core.*;
import com.fasterxml.jackson.databind.ObjectMapper;*/

public class Test {
	public static void main(String[] args){
	}
}

		// Program flow
		// Program starts as either a Doctor or secretary. If Doctor then IsDoctor is opened.
		// The program runs a while loop and presents a list of patients which the user can select.
		// When user selects a journal it is first checked who the user is.
		// If the user is doctor then it is checked if the patient is referred and the lock IsReferred would then open
		// The user then receives the journal through the receive method and can perform some action: 
		// If the user is a secretary than the user can print the journal, or edit the public note.
		// If the user is a doctor then the journal can be printed, public note can be edited or 
		// a public session note can be added. If the patient is referred then the doctor can add to private session
		// When the user has done some action the program returns to the main loop.  
		

		//Configuration based on parameters
		// Hospital 1: new MatrixApi("https://ansuddin.xyz","ans","test","!jGiMyqbOaVwNMkgkYU:ansuddin.xyz");
		// new HashMap<String,String>()
		
		// Hospital 2: 

		// Doctor 1:

		// Doctor 2:

		// Secretary 1:

		/*Hospital hospital = new Hospital();
		Employee employee;
		if(args[0].equals("doctor")){
			System.out.println(args[0]);
			String[] patients = new String[2];
			employee = new Doctor(1,args[0], patients);
			open Policy.IsDoctor;
			hospital.selectPatient(employee);
		} else if(args[0].equals("secretary")) {
			System.out.println(args[0]);
			//employee = new Secretary(2,args[0]);
			// // Call Hospital.selectPatient(employee);
		} else {
			System.out.println("Wrong args:" + args[0] + ":");
			return;
		}*/


		/*
		
		String ssn = "270793-2131";
		String name = "Ans Uddin";
		String address = "Knapmagerstien 49";
		String publicNote = "antibiotika intolerance";
		String[] publicSessions = {" D-vitamin deficiancy"};
		String[] privateSessions = {"Treatment for panic attacks started"};

		

		PatientJournalD journal = new PatientJournalD(ssn, name, address, publicNote, publicSessions,	privateSessions);
		
		journal.setSsn("test");
		String test = journal.getSsn();
		Doctor doctor = new Doctor();

		?(Policy.lowD+Policy.untrusted) String untrustedVar = "";
		?(Policy.lowD+Policy.trusted) String trustedVar = "";

		untrustedVar = trustedVar;//OK
		//trustedVar = untrustedVar; // BAD

		trustedVar = Policy.<String>endorse(untrustedVar);

		journal.setPublicNote(Policy.<String>endorse(untrustedVar));


		/*String[] publicVar = journal.getPrivateSessions();
		Doctor doctor = new Doctor();
		open Policy.IsDoctor;
		open Policy.Referred;
		//open Policy.IsReferred(doctor, journal);
		if (Policy.Referred && Policy.IsDoctor){
			journal.addToPrivateSessions("test");
		}*/

		//System.out.println(journal.getName());

		// Test declassify
		// open Policy.IsDoctor{
		// String secret = Policy.<String>declassifyMedium(journal.getName());
		// System.out.println(secret);
		//  }
/*
		policy bottom = {Object x:};
		?(Policy.lowD+Policy.trusted) String low = "";
		?(Policy.mediumD+Policy.trusted) String medium = "";
		?Policy.highD String high = "";

		//OK
		medium = low ;
		high = medium;
		high = low;


		//BAD
		// low = medium;
		// medium = high;
		// low = high;

		open Policy.IsDoctor;
		String out = Policy.<String>declassifyMedium(medium);
		System.out.println(out);


		//open Policy.Referred;
		//low = Policy.<bottom,String>declassifyHigh(high);
		// String pub = Policy.<low,String>declassify("");
		// System.out.print(pub);

/*
		?Policy.lowD String lowVar = "low";
		?Policy.mediumD String mediumVar = "medium";
		?Policy.highD String highVar = "high";

		mediumVar = lowVar; // OK
		//lowVar = mediumVar; // BAD
		open Policy.IsDoctor{
			lowVar = mediumVar; // OK
		}

		highVar = mediumVar; // OK
		//mediumVar = highVar; // BAD
		open Policy.IsReferred(doctor,journal){
			mediumVar = highVar; //OK
			//lowVar = highVar; // BAD
			open Policy.IsDoctor{
				lowVar = highVar;
			}
		}
*/


		
		// If a Patient reads it will flow a high variable
		//?Policy.high String patientreading = journal.getSsn();

		//Patient patient = new Patient();
		//patient.receive(journal);

		// However I can not set the value of SSN 
		//journal.setSsn(patientreading);

		//?TrustedUntrusted.trusted int id = journal.getId();

		//?PatientJournal.high String ssn = journal.getSsn();
		//journal.setPublicNote(ssn);

		//?HighLow.low String fakeSsn = "012345-6789";
		//journal.setSsn(fakeSsn);

		//?PatientJournal.low String note = journal.getPublicNote();
		//journal.addToSessions(note);

		// Confidentiality
		/*											
		?Policy.low String publicVar = "public";
		?Policy.high String secretVar = "secret";

		secretVar = publicVar; // OK
		//publicVar = secretVar; // BAD

		// Integrity
		?Policy.untrusted String untrustedInput = "untrusted";
		?Policy.trusted String trustedInput = "trusted";

		untrustedInput = trustedInput; // OK
		//trustedInput = untrustedInput; // BAD
		*/

		// Label inference

		// Combined policies
		//?(Policy.low2 + Policy.trusted) String name = "Ans";
		//String publicName = name;
		//?(Policy.high2 + Policy.trusted) String test = name;



		// Policy test with fresh and general
		//final policy generalPolicy = { Doctor d : };
		//final policy freshPolicy = { doctor : };
		//?generalPolicy String val1 = "General doctor";
		//?freshPolicy String val2 = "Fresh doctor";
		//?secretary String val3  = "secretary";
		//val1 = val2; // BAD freshpolicy is more secret than generalpolicy. 
		//val2 = val1; // OK only 

		//Policy test with lock
		/*Doctor doctor = new Doctor();

		final policy low = {Doctor d: ; MatrixService m: };
		final policy lowMatrix = {MatrixService m:};
		final policy highDoctor = { Doctor d: Policy.IsDoctor};  
		final policy highMatrix = { Doctor d: Policy.Matrix};
		final policy highMatrixDoctor = { Doctor d: Policy.IsDoctor
										; MatrixService m: Policy.Matrix };
		?low String publicVar = "public";
		?lowMatrix String publicMatrix = "public";
		?highDoctor String secretVarDoc = "secret";
		?highMatrix String secretVarMatrix = "secret";
		?highMatrixDoctor String secret = "secret";*/


		//open Policy.Matrix;
		//publicVar = secretVarDoc;
		//secretVarMatrix = secretVarDoc;
		//publicVar = secret;
		//publicMatrix = secret;

		// publicVar = publicMatrix;

		 // Patientjournal Policy test
		/*Object lowObserver = new Object();
		Object highObserver = new Object();
		final policy low = {lowObserver: ; highObserver:};
		final policy medium = {highObserver:};
		final policy high = {(Doctor d, PatientJournal p)  highObserver: Policy.IsReferred(d,p)};

		?low String publicVar = "public";
		?medium String mediumVar = "medium";
		?high String secretVar = "secret";
		secretVar = publicVar; // OK
		//publicVar = secretVar; // BAD
		mediumVar = publicVar; // OK
		//publicVar = mediumVar; // BAD
		secretVar = mediumVar; // OK
		//mediumVar = secretVar; // BAD


		/*Doctor doctor = new Doctor();
		PatientJournal journal = new PatientJournal();
		open Policy.IsReferred(doctor,journal);
		mediumVar = secretVar; // OK*/
