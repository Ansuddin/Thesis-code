import java.util.Scanner;
public class Doctor implements Employee{
	
	?{Object a:}int id;
	?{Object a:}String name;
	?{Object a:}String[] patients;

	public Doctor (?{Object a:}int id, ?{Object a:} String name, ?{Object x:}String[] patients){
		this.id = id;
		this.name = name;
		this.patients = patients;
	}

	!(Policy.lowD+Policy.trusted)
	public void receive(?(Policy.lowD+Policy.trusted)PatientJournalD journal, 
						?(Policy.lowD+Policy.untrusted)Scanner scanner, Hospital hospital){
		
		Doctor self = this;
		String ssn = journal.getSsn();
		for(int i=0; i<patients.length; i++){
			if(patients[i] == ssn){
				 open Policy.IsReferred(self);
				}
		}
		

		System.out.println("Select an option: ");
		System.out.println("1. Print journal");
		System.out.println("2. Edit public note");
		System.out.println("3. Add to public session");
		if(Policy.IsReferred(self)){
			System.out.println("4. Add to private session");
		}
		System.out.println("0. Back");
		int option = scanner.nextInt();
		int endorsedOption = Policy.<Integer>endorse(option).intValue();
		if(endorsedOption==1){
			// print journal
			Employee self = (Employee) this;
			Util.printJournal(journal,self);
		} else if (endorsedOption==2){
			// edit journal
			// call updateJournal
			String input = Util.getUserInput();
			?(Policy.lowD+Policy.trusted) String endorsed = Policy.<String>endorse(input);
			journal.setPublicNote(endorsed);
			hospital.updateJournal(journal);
		} else if (endorsedOption==3) {
			// Add to public session
			// Get input and endorse
			// Call updateJournal
				if(Policy.IsDoctor){
					String input = Util.getUserInput();
					?(Policy.lowD+Policy.trusted) String endorsed = Policy.<String>endorse(input);
					journal.addToPublicSessions(endorsed);
					hospital.updateJournal(journal);
				
				}
		} else if (endorsedOption==4) {
			// Add to private session
			// Get input and endorse
			// Call updateJournal
			if(Policy.IsReferred(self)){
				open Policy.Referred{
					 String input = Util.getUserInput();
					 ?(Policy.lowD+Policy.trusted) String endorsed = Policy.<String>endorse(input);
					 journal.addToPrivateSessions(endorsed);
					 hospital.updateJournal(journal);
				}
			}
		} else {
			// do nothing
		}
		
	}


}